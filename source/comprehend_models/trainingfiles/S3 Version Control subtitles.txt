Okay, hello Cloud Gurus
and welcome to this lecture.
In this lecture we're going to look at versioning.
So before we get started,
let's just see what we can do with versioning.
So using versioning with S3,
basically this is going to store all versions of an object
and including all rights even if you delete the object.
And we'll see that when we log into the console.
So Versioning is a great backup tool,
and once versioning is enabled on a bucket,
it cannot be disabled.
It can only be suspended,
so you can only suspend it,
you can't go in and disable versioning.
You have to delete the bucket
and create a new one to completely turn it off.
It also integrates with Lifecycle rules.
Now, we're going to cover that in the next lecture as well,
so we'll look at how we can use Lifecycle rules
and Versioning to move things to Glacier.
And Versioning also comes with MFA Delete capability.
And this basically uses Multi-Factor Authentication,
which can be used to provide an additional layer of security
to stop people from going in
and accidentally deleting objects.
So to permanently delete something,
you would need Multi-Factor Authentication to do that.
So this is lab, let's log in to the AWS Console
and have a look at versioning.
Okay, so here I am in the AWS Console,
now if I click on "Services"
and I can see S3 under "Storage".
So let's go ahead and click on there.
I'm going to create a new bucket for this lecture.
I'm going to call it acloudguruversioning2019rjk,
which is my initials,
hopefully that will be available.
And I'm just going to go ahead and hit "Create" immediately.
Okay, there we go, so it's created my bucket.
Notice the different levels of access,
so by default our bucket and objects are not public.
If we go ahead and create a bucket,
the bucket and the objects within them are not public.
So we do want to change that,
because we're going to need to look
at all the different versions of our files.
So you want to just click in here
and go "Edit public access settings".
Make sure all these boxes are unticked,
go ahead and type the word "Confirm",
and go ahead and hit "Confirm".
And that will then change your access levels,
so objects can now be public.
So let's go into this bucket,
and the very first thing
we're going to do is turn on versioning.
So if we go over to "Properties",
you'll see "Versioning" here,
it's the very first, you know, box inside "Properties".
And let's go ahead and click on here,
and we can go and hit "Enable versioning",
and we'll go ahead and hit "Save".
Now, notice that we can only enable or suspend,
we can't turn it off.
So we now have versioning enabled on this bucket.
Now we don't have anything in this bucket,
so let's go ahead and upload a file to this bucket.
So I'm going to go ahead and hit "Upload",
and I'm going to add this file
and it just is HelloCloudGurus.txt.
And I'm going to go ahead and hit "Upload".
So now that that has uploaded,
let's make it public and have a look at it.
So we'll just click on the object
and go "Make public" and hit "Make public".
And then we can uncheck and then check again
to get the link,
and you can click on the link in here and there you go.
It says, "Hello Cloud Gurus!
"This is version 1!!"
So it's a very, very simple TXT file.
So what I'm going to do is just go back
and I'm going to go back to my bucket
and we're going to upload a new version of this file.
So I'm quickly just going to change this file.
So let's change this file to say, "This is version 2!!
"This is a better version."
Something like that.
I'm going to go ahead and hit "Save",
and I'm going to "Save Anyway",
and now I'm going to go ahead and upload this to S3.
So back in the console,
I'm going to go and hit "Upload",
and we're going to add this file and let's add it again
and hit "Upload".
So that has now uploaded the file.
Now, the first thing I want to ask you is
what do you think has happened to the permissions
on this file?
Do you think this file is still public,
or do you think it is, it's changed the permissions?
Well, if we click in there, and we click on the actual link,
you can see that the file is now, is "AccessDenied".
So it has, by uploading the new file,
it has changed the permissions on that file.
You can't access it.
So you need to just go back
and basically go in and enable it
so that it is public.
So we'll just go here, go to "Actions", "Make public"
and "Make public".
And there we go.
And then I'm going to click on the link again
and click on the link again, and here we go.
We can see that it says,
"Hello Cloud Gurus!
"This is version 2!!
"This is a better version."
So if I go back,
you want to be able to see the versions,
and you'll notice that once we turn versioning on,
we've got this versions sort of UI here that appears.
And right now it's not showing us the versions.
So if we click on "Show",
we can now see our different versions.
So we've got our version one here,
and you can see the latest version here.
And notice that they've got different Version IDs.
And also note the different sizes.
So actually the size of our S3 bucket now
is the sum of these two different versions.
So that's something to bear in mind
from an architectural point of view.
If you have versioning turned on in a bucket,
and you're making constant changes to large files,
the size of your bucket
is going to start going up exponentially.
So do bear that in mind when you're architecting,
maybe you don't need versioning turned on
or maybe you need to enable a Lifecycle policy
to retire old versions quickly.
We're going to look at Lifecycle policies
in the very next lecture.
So let's go ahead and have,
I'm going to go ahead and upload a third version.
So we're going to have three versions.
So I'm quickly just going to make a change to that TXT file.
So it's in here, "Hello Cloud Gurus!
"This is version 2!!"
Let's change this to version three,
and this is the best version.
So "best version".
And then I might just add some random stuff in here
just to make it even bigger.
So I've saved that now
and what I'm going to do is go back over to S3,
and let's go ahead and hit "Upload",
and hit "Add files", and we're going to upload this file,
and hit "Upload" again.
And now you will be able to see that
this is now the latest version,
it's 87 bytes in size.
That was the previous version,
that was the previous version.
Again let's actually just test that we can access it.
So if we click in here, and then click on the link,
you see we're going to get an "AccessDenied",
so we do need to go and make that public again.
So we'll click on here,
and go "Actions", "Make public",
and go ahead and hit "Make public".
One thing to note, if we go back to this version,
the original version that we had, and we click on the link,
we can see that it's version one
and that it is still public.
So when we're uploading the newest version,
it's automatically going to be private,
but the older versions permissions don't change as well.
So let's click in here,
we can see our three different versions.
Now if we wanted to get rid of a version,
or get rid of a file, let's actually just go to "Hide" here.
So we turn versioning off.
If we were to click in here and go "Actions", "Delete",
what's going to happen is, let's hit "Delete".
So the bucket appears empty, but it's not actually empty
if we go to "Show versions".
And what we've actually done is
we've just placed a "Delete marker" over.
And a "Delete marker" is simply a new version.
So we still have our three different versions in here,
even though that we've deleted that file.
And the way we would restore this file is
if we go in and delete the delete marker.
So let's go in here and hit "Delete",
and hit "Delete".
And that has now restored it to the latest version,
to version three.
Likewise, if we go in here and go "Actions", "Delete",
we can actually go in and delete this individual version.
So we've actually deleted that version now.
We haven't placed a delete marker over it,
because we've clicked on the "Show versions".
And now this is the latest version, version two.
Now if we click on that,
we should be able to see version two.
So let's go to my exam tips.
So what are my exam tips?
Well just remember that versioning stores all versions
of an object,
including any writes and even if you delete an object,
it's going to place a delete marker over that object,
but the versions that existed before it will still exist.
It's a fantastic backup tool,
and once enabled, versioning cannot be disabled,
it can only be suspended.
It integrates with Lifecycle rules,
which we're going to look at in the very next lecture.
And this is the most important for the exam,
just remember that versioning has
Multi-Factor Authentication Delete capability,
and this basically uses Multi-Factor Authentication
in order to delete a file.
So if someone wants to delete a file
they'll have to provide MFA in order to do it.
And this can be used to provide an additional layer
of security.
It's critical to remember that going into your exam.
So now that we know about versioning,
let's go ahead and have a look at Lifecycle rules.
So if you got the time, please join me in the next lecture!
Thank you."